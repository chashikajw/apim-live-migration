-- Alter Tables –

ALTER TABLE AM_API_URL_MAPPING
ADD LOG_LEVEL VARCHAR(255) DEFAULT 'OFF';

ALTER TABLE AM_POLICY_APPLICATION
ADD RATE_LIMIT_COUNT INTEGER NULL DEFAULT 0,
    RATE_LIMIT_TIME_UNIT VARCHAR(25) NULL DEFAULT NULL;

ALTER TABLE AM_DEPLOYMENT_REVISION_MAPPING 
ADD REVISION_STATUS VARCHAR(255) NULL DEFAULT 'APPROVED';


ALTER TABLE AM_GATEWAY_ENVIRONMENT
ADD  TYPE VARCHAR(255) NULL DEFAULT 'hybrid',
     GATEWAY_TYPE VARCHAR(255) NOT NULL DEFAULT 'Regular';


-- Add New Tables –

IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[IDN_INVALID_TOKENS]') AND TYPE IN (N'U'))
CREATE TABLE IDN_INVALID_TOKENS (
 	UUID VARCHAR(255) NOT NULL,
 	TOKEN_IDENTIFIER VARCHAR(2048) NOT NULL,
 	CONSUMER_KEY VARCHAR(255) NOT NULL,
 	TIME_CREATED DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
 	EXPIRY_TIMESTAMP DATETIME NOT NULL,
 	PRIMARY KEY (UUID)
);

IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[IDN_APP_REVOKED_EVENT]') AND TYPE IN (N'U'))
CREATE TABLE IDN_APP_REVOKED_EVENT (
	EVENT_ID VARCHAR(255) NOT NULL,
	CONSUMER_KEY VARCHAR(255) NOT NULL,
	TIME_REVOKED DATETIME NOT NULL,
	ORGANIZATION VARCHAR(100),
	PRIMARY KEY (EVENT_ID),
	CONSTRAINT CON_APP_EVT_KEY UNIQUE (CONSUMER_KEY, ORGANIZATION)
);

IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[IDN_SUBJECT_ENTITY_REVOKED_EVENT]') AND TYPE IN (N'U'))
CREATE TABLE IDN_SUBJECT_ENTITY_REVOKED_EVENT (
    EVENT_ID VARCHAR(255) NOT NULL,
    ENTITY_ID VARCHAR(255) NOT NULL,
    ENTITY_TYPE VARCHAR(100) NOT NULL,
    TIME_REVOKED DATETIME NOT NULL,
    ORGANIZATION VARCHAR(100),
    PRIMARY KEY (EVENT_ID),
    CONSTRAINT CON_SUB_EVT_KEY UNIQUE (ENTITY_ID, ENTITY_TYPE, ORGANIZATION)
);


IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[AM_KEY_MANAGER_PERMISSIONS]') AND TYPE IN (N'U'))
CREATE TABLE AM_KEY_MANAGER_PERMISSIONS (
  KEY_MANAGER_UUID VARCHAR(50) NOT NULL,
  PERMISSIONS_TYPE VARCHAR(50) NOT NULL,
  ROLE VARCHAR(255),
  PRIMARY KEY (KEY_MANAGER_UUID, ROLE),
  FOREIGN KEY (KEY_MANAGER_UUID) REFERENCES AM_KEY_MANAGER(UUID) ON DELETE CASCADE
);

IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[AM_API_POLICY_MAPPING]') AND TYPE IN (N'U'))
CREATE TABLE AM_API_POLICY_MAPPING (
    API_POLICY_MAPPING_ID INTEGER IDENTITY(1,1),
    API_UUID VARCHAR(256) NOT NULL,
    REVISION_UUID VARCHAR(45),
    POLICY_UUID VARCHAR(45) NOT NULL,
    POLICY_ORDER INTEGER NOT NULL,
    DIRECTION VARCHAR(10) NOT NULL,
    PARAMETERS VARCHAR(1024) NOT NULL,
    FOREIGN KEY (API_UUID) REFERENCES AM_API(API_UUID) ON DELETE CASCADE,
    FOREIGN KEY (POLICY_UUID) REFERENCES AM_OPERATION_POLICY(POLICY_UUID) ON DELETE CASCADE,
    PRIMARY KEY(API_POLICY_MAPPING_ID)
);


IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[AM_GATEWAY_POLICY_METADATA]') AND TYPE IN (N'U'))
CREATE TABLE AM_GATEWAY_POLICY_METADATA (
  GLOBAL_POLICY_MAPPING_UUID VARCHAR(45)   NOT NULL,
  DISPLAY_NAME               VARCHAR(255)  NULL,
  DESCRIPTION                VARCHAR(1023) NULL,
  ORGANIZATION               VARCHAR(100)  NOT NULL,
  PRIMARY KEY (GLOBAL_POLICY_MAPPING_UUID)
);

IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[AM_GATEWAY_POLICY_MAPPING]') AND TYPE IN (N'U'))
CREATE TABLE AM_GATEWAY_POLICY_MAPPING (
  POLICY_TO_FLOW_INFO_MAPPING_ID INTEGER IDENTITY(1,1),
  GLOBAL_POLICY_MAPPING_UUID     VARCHAR(45)   NOT NULL,
  POLICY_UUID                    VARCHAR(45)   NOT NULL,
  POLICY_ORDER                   INTEGER       NOT NULL,
  DIRECTION                      VARCHAR(10)   NOT NULL,
  PARAMETERS                     VARCHAR(1024) NOT NULL,
  FOREIGN KEY (POLICY_UUID) REFERENCES AM_OPERATION_POLICY (POLICY_UUID) ON UPDATE CASCADE ON DELETE NO ACTION,
  FOREIGN KEY (GLOBAL_POLICY_MAPPING_UUID) REFERENCES AM_GATEWAY_POLICY_METADATA (GLOBAL_POLICY_MAPPING_UUID) ON UPDATE CASCADE ON DELETE CASCADE,
  PRIMARY KEY (POLICY_TO_FLOW_INFO_MAPPING_ID)
);

IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[AM_GATEWAY_POLICY_DEPLOYMENT]') AND TYPE IN (N'U'))
CREATE TABLE AM_GATEWAY_POLICY_DEPLOYMENT (
  GATEWAY_LABEL              VARCHAR(255) NOT NULL,
  GLOBAL_POLICY_MAPPING_UUID VARCHAR(45)  NOT NULL,
  ORGANIZATION               VARCHAR(100) NOT NULL,
  FOREIGN KEY (GLOBAL_POLICY_MAPPING_UUID) REFERENCES AM_GATEWAY_POLICY_METADATA (GLOBAL_POLICY_MAPPING_UUID) ON UPDATE CASCADE ON DELETE NO ACTION,
  PRIMARY KEY (ORGANIZATION,GATEWAY_LABEL)
);

IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[AM_APP_REVOKED_EVENT]') AND TYPE IN (N'U'))
CREATE TABLE AM_APP_REVOKED_EVENT (
    CONSUMER_KEY    VARCHAR(255)    NOT NULL,
    TIME_REVOKED    DATETIME        NOT NULL,
    ORGANIZATION    VARCHAR(100),
    PRIMARY KEY (CONSUMER_KEY, ORGANIZATION)
);

IF NOT  EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[AM_SUBJECT_ENTITY_REVOKED_EVENT]') AND TYPE IN (N'U'))
CREATE TABLE AM_SUBJECT_ENTITY_REVOKED_EVENT (
    ENTITY_ID       VARCHAR(255)    NOT NULL,
    ENTITY_TYPE     VARCHAR(100)    NOT NULL,
    TIME_REVOKED    DATETIME        NOT NULL,
    ORGANIZATION    VARCHAR(100),
    PRIMARY KEY (ENTITY_ID, ENTITY_TYPE, ORGANIZATION)
);
